[{"/Users/kevin.krisp/WebstormProjects/React-Learning/src/index.tsx":"1","/Users/kevin.krisp/WebstormProjects/React-Learning/src/reportWebVitals.ts":"2","/Users/kevin.krisp/WebstormProjects/React-Learning/src/App.tsx":"3","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/FavoritesPage.tsx":"4","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RegistryPage.tsx":"5","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/NotFoundPage.tsx":"6","/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/helperBackend.ts":"7","/Users/kevin.krisp/WebstormProjects/React-Learning/src/constants/API.ts":"8","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage.tsx":"9","/Users/kevin.krisp/WebstormProjects/React-Learning/src/utils/Hash.ts":"10"},{"size":653,"mtime":1612515046787,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610631907133,"results":"13","hashOfConfig":"12"},{"size":2600,"mtime":1612793914930,"results":"14","hashOfConfig":"12"},{"size":602,"mtime":1612790030696,"results":"15","hashOfConfig":"12"},{"size":212,"mtime":1611933326239,"results":"16","hashOfConfig":"12"},{"size":207,"mtime":1611933280235,"results":"17","hashOfConfig":"12"},{"size":200,"mtime":1612430912302,"results":"18","hashOfConfig":"12"},{"size":106,"mtime":1612438853404,"results":"19","hashOfConfig":"12"},{"size":5448,"mtime":1612793914934,"results":"20","hashOfConfig":"12"},{"size":145,"mtime":1612790864708,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hl5q4u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/kevin.krisp/WebstormProjects/React-Learning/src/index.tsx",[],["44","45"],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/reportWebVitals.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/App.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/FavoritesPage.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RegistryPage.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/NotFoundPage.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/helperBackend.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/constants/API.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage.tsx",["46","47","48"],"import React, {useEffect, useState} from 'react';\nimport '../styles/randomRecipe.css'\nimport {ReactComponent as LikeSvg} from '../resources/favorite_border-24px (1).svg';\nimport {ReactComponent as LikedSvg} from \"../resources/favorite-24px.svg\";\nimport {fetchJson} from \"../helperFunctions/helperBackend\";\nimport {appId, appKey} from \"../constants/API\";\nimport {IDish} from \"../IDish\";\nimport {generateHash} from \"../utils/Hash\";\n\ninterface ImageAPIResponse {\n    image: string\n}\n\nexport function RandomRecipePage(props: any) {\n\n    const [liked, setLiked] = useState(false);\n    const [dish, setDish] = useState<IDish>({\n        name: \"\",\n        imageUrl: \"\",\n        recipe: [],\n        liked: false\n    })\n\n    useEffect(() => {\n        orchestrate().catch(error => console.log(error))\n    }, []);\n\n    let orchestrate = async (): Promise<any> => {\n\n        let pictureObject = await fetchPicture();\n        let dishUrl: string = pictureObject.image;\n        let dishName = getDishName(dishUrl);\n        let recipeResponse = await fetchRecipe(dishName);\n\n        \n\n\n        createDish(recipeResponse, dishName, pictureObject);\n\n    }\n\n    let fetchPicture = async (): Promise<ImageAPIResponse> => {\n        const IMAGE_API = \"https://foodish-api.herokuapp.com/api\";\n        let imageUrlObject: ImageAPIResponse = await fetchJson(IMAGE_API);\n\n        return imageUrlObject;\n    }\n\n    let fetchRecipe = async (dishName: string): Promise<any> => {\n        const EDAMAM_API = \"https://api.edamam.com/search?\";\n        let recipeResponse = await fetchJson(EDAMAM_API + `app_id=${appId}&app_key=${appKey}&q=${dishName}`)\n\n        return recipeResponse;\n    }\n\n    let getDishName = (dishUrl: string): string => {\n\n        let dish: string = dishUrl;\n\n        let slashIndex = dish.lastIndexOf(\"/\");\n        dish = dish.substring(slashIndex + 1);\n        let dotIndex = dish.lastIndexOf(\".\");\n        dish = dish.substring(0, dotIndex);\n        dish = dish.replace(/[0-9]/g, '');\n        return dish.charAt(0).toUpperCase() + dish.substring(1).toLowerCase();\n    }\n\n    let createDish = (recipeResponse: any, title: string, imageUrl: ImageAPIResponse) => {\n\n        let recipeArray: string[] = [];\n        let ingredients = recipeResponse?.hits[0]?.recipe?.ingredients;\n        ingredients.forEach((ing: { text: string; }) => recipeArray.push(ing.text));\n\n        let favoriteStatus = props.markedAsFavorite(generateHash(recipeArray.join()));\n\n        let dish: IDish = {\n            imageUrl: imageUrl.image,\n            name: title,\n            recipe: recipeArray,\n            liked: favoriteStatus\n        }\n        \n        setDish(dish);\n    }\n\n    let saveAsFavorite = () =>{\n\n        setDish({\n            ...dish,\n            liked : !dish.liked\n        })\n\n        if(!dish.liked){\n            props.addToFavorite(dish);\n        } else{\n            props.removeFromFavorite(dish);\n        }\n\n    }\n\n\n    return (\n        <div>\n            <div className=\"first \">\n\n                <div style={{backgroundColor: \"#FFDC00\"}}\n                     className=\"row align-items-center justify-content-center heights\">\n\n                    <div className=\"col-2 \">\n\n                        <div style={{backgroundColor: \"#FFFFFF\"}} className=\"row \">\n                            <p className=\"textCenter\"><b>{dish.name}</b></p>\n                        </div>\n\n                        <div style={{backgroundColor: \"#FFFFFF\"}} className=\"row align-items-center\">\n\n                            <div className=\"col\">\n                                <img alt=\"recipe\" className=\"recipePicture\"\n                                     src={dish.imageUrl}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row align-items-center\">\n                            {dish.liked ? <LikedSvg onClick={() => saveAsFavorite()}/> :\n                                <LikeSvg onClick={() => saveAsFavorite()}/>}\n                        </div>\n                    </div>\n\n                    <div style={{\n                        minHeight: \"21.35rem\",\n                        maxHeight: \"21.35rem\",\n                        maxWidth: \"50rem\",\n                        minWidth: \"50rem\",\n                        backgroundColor: \"#3D9970\"\n                    }}\n                         className=\"col-4 scrollable\">\n                        <div className=\"row \">\n                            <div className=\"col\">\n                                <p className=\"textCenter\"><b>Recipe</b></p>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <ul>\n                                    {dish.recipe.map(recipe => {\n                                        return <li>{recipe}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col\">\n                        <button style={{marginLeft: \"auto\", marginRight: \"auto\", display: \"block\"}} type=\"button\"\n                                className=\"btn btn-primary\" onClick={orchestrate}>Get new recipe!\n                        </button>\n                    </div>\n                </div>\n                <br/>\n\n            </div>\n        </div>\n    );\n}","/Users/kevin.krisp/WebstormProjects/React-Learning/src/utils/Hash.ts",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":16,"column":12,"nodeType":"55","messageId":"56","endLine":16,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":16,"column":19,"nodeType":"55","messageId":"56","endLine":16,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":26,"column":8,"nodeType":"60","endLine":26,"endColumn":10,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'liked' is assigned a value but never used.","Identifier","unusedVar","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orchestrate'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [orchestrate]",{"range":"67","text":"68"},[797,799],"[orchestrate]"]