[{"/Users/kevin.krisp/WebstormProjects/React-Learning/src/index.tsx":"1","/Users/kevin.krisp/WebstormProjects/React-Learning/src/reportWebVitals.ts":"2","/Users/kevin.krisp/WebstormProjects/React-Learning/src/App.tsx":"3","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/FavoritesPage.tsx":"4","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RegistryPage.tsx":"5","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/NotFoundPage.tsx":"6","/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/helperBackend.ts":"7","/Users/kevin.krisp/WebstormProjects/React-Learning/src/constants/API.ts":"8","/Users/kevin.krisp/WebstormProjects/React-Learning/src/utils/Hash.ts":"9","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage/RandomRecipeErrorBoundary.tsx":"10","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage/RandomRecipePage.tsx":"11","/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/InputValidatorUtil.ts":"12","/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/StringUtil.ts":"13","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RecipeCard.tsx":"14"},{"size":653,"mtime":1612515046787,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1610631907133,"results":"17","hashOfConfig":"16"},{"size":3009,"mtime":1613642598015,"results":"18","hashOfConfig":"16"},{"size":2319,"mtime":1613657553282,"results":"19","hashOfConfig":"16"},{"size":220,"mtime":1613032356048,"results":"20","hashOfConfig":"16"},{"size":215,"mtime":1613032356065,"results":"21","hashOfConfig":"16"},{"size":200,"mtime":1612430912302,"results":"22","hashOfConfig":"16"},{"size":106,"mtime":1612438853404,"results":"23","hashOfConfig":"16"},{"size":145,"mtime":1612790864708,"results":"24","hashOfConfig":"16"},{"size":1271,"mtime":1612874506554,"results":"25","hashOfConfig":"16"},{"size":3318,"mtime":1613649057136,"results":"26","hashOfConfig":"16"},{"size":681,"mtime":1613027607031,"results":"27","hashOfConfig":"16"},{"size":727,"mtime":1612964534297,"results":"28","hashOfConfig":"16"},{"size":3091,"mtime":1613652729445,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hl5q4u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"61"},"/Users/kevin.krisp/WebstormProjects/React-Learning/src/index.tsx",[],["62","63"],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/reportWebVitals.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/App.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/FavoritesPage.tsx",["64","65","66","67"],"import React, {useState} from 'react';\nimport \"../styles/favoritesPage.css\"\nimport {IDish} from \"../IDish\";\nimport {Route, Switch} from \"react-router\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport NotFound from \"./NotFoundPage\";\nimport RecipeCard from \"./RecipeCard\";\n\ninterface IFavoriteProps {\n    favoriteDishes: IDish[]\n\n    addToFavorite(dish: IDish): void;\n\n    removeFromFavorite(dish: IDish): void;\n}\n\nexport default function FavoritesPage(props: IFavoriteProps) {\n\n    let location = useLocation();\n\n    console.log(location.pathname);\n\n    let overviewCards = null;\n\n    if((!props.favoriteDishes || props.favoriteDishes.length == 0) && location.pathname === \"/favorites\"){\n\n        overviewCards = <div className=\"\">\n            <div>\n                <div className=\"alert alert-info\" role=\"alert\">\n                    <p>Please choose a favorite recipe!</p>\n                </div>\n            </div>\n        </div>;\n\n    } else if(props.favoriteDishes && props.favoriteDishes.length > 0 && location.pathname === \"/favorites\"){\n        overviewCards = <div className=\"row\">\n            {\n                props.favoriteDishes.map((dish) => {\n\n                    return <div className=\"card col\">\n                        <img src={dish.imageUrl} className=\"card-img-top recipePicture\"/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{dish.name}</h5>\n                        </div>\n                        <Link to={\"/favorites/\" + dish.name} className=\"btn btn-primary\">See Recipe</Link>\n                    </div>\n\n\n                })\n            }\n        </div>;\n    } else{\n        overviewCards = null;\n    }\n\n\n\n    return <div className=\"center-screen\">\n        <div className=\"row\">\n            {\n                overviewCards\n            }\n        </div>\n\n        <Switch>\n            {\n                props.favoriteDishes.map((dish) => {\n                    return <Route path={\"/favorites/\" + dish.name}><RecipeCard dish={dish}\n                                                                     removeFromFavorite={props.removeFromFavorite}\n                                                                     addToFavorite={props.addToFavorite}/></Route>\n                })\n            }\n        </Switch>\n\n    </div>;\n}","/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RegistryPage.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/NotFoundPage.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/helperBackend.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/constants/API.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/utils/Hash.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage/RandomRecipeErrorBoundary.tsx",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RandomRecipePage/RandomRecipePage.tsx",["68"],"import React, {useEffect, useState} from 'react';\nimport '../../styles/randomRecipe.css'\nimport {fetchJson} from \"../../helperFunctions/helperBackend\";\nimport {appId, appKey} from \"../../constants/API\";\nimport {IDish} from \"../../IDish\";\nimport {generateHash} from \"../../utils/Hash\";\nimport {getDishNameOfUrl} from \"../../helperFunctions/StringUtil\";\nimport {validateFoodishUrl} from \"../../helperFunctions/InputValidatorUtil\";\nimport RecipeCard from \"../RecipeCard\";\n\ninterface ImageAPIResponse {\n    image: string | null,\n}\n\ninterface PropsInterface{\n    addToFavorite(dish:IDish): void;\n    removeFromFavorite(dish: IDish): void;\n    markedAsFavorite(recipeHash: number): boolean;\n}\n\nexport default function RandomRecipePage(props: PropsInterface) {\n\n    const [dish, setDish] = useState<IDish>({\n        name: \"\",\n        imageUrl: \"\",\n        recipe: [],\n        liked: false\n    })\n\n    const [error, setError] = useState({error: null});\n\n    useEffect(() => {\n        orchestrate().catch(error => {\n            setError(error);\n        });\n    }, []);\n\n    if (error.error !== null) {\n        throw error;\n    }\n\n    const orchestrate = async (): Promise<any> => {\n\n        let pictureObject = await fetchPicture();\n        let dishUrl: string | null = pictureObject.image;\n        let dishName = getDishNameOfUrl(dishUrl);\n        let recipeResponse = await fetchRecipe(dishName);\n\n        createDish(recipeResponse, dishName, pictureObject);\n    }\n\n    const fetchPicture = async (): Promise<ImageAPIResponse> => {\n        const IMAGE_API = \"https://foodish-api.herokuapp.com/api\";\n        let imageUrlObject: ImageAPIResponse = await fetchJson(IMAGE_API);\n        validateFoodishUrl(imageUrlObject.image);\n\n        return imageUrlObject;\n    }\n\n    const fetchRecipe = async (dishName: string): Promise<any> => {\n        const EDAMAM_API = \"https://api.edamam.com/search?\";\n        let recipeResponse = await fetchJson(EDAMAM_API + `app_id=${appId}&app_key=${appKey}&q=${dishName}`)\n\n        return recipeResponse;\n    }\n\n    const createDish = (recipeResponse: any, title: string, imageUrl: ImageAPIResponse) : void => {\n\n        let recipeArray: string[] = [];\n        let ingredients = recipeResponse?.hits[0]?.recipe?.ingredients;\n        ingredients?.forEach((ing: { text: string; }) => recipeArray.push(ing.text));\n\n        let favoriteStatus = props.markedAsFavorite(generateHash(recipeArray.join()));\n\n        if (imageUrl.image) {\n            let dish: IDish = {\n                imageUrl: imageUrl.image,\n                name: title,\n                recipe: recipeArray,\n                liked: favoriteStatus\n            }\n\n            setDish(dish);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"first \">\n                <RecipeCard dish={dish} addToFavorite={props.addToFavorite} removeFromFavorite={props.removeFromFavorite}/>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col\">\n                        <button style={{marginLeft: \"auto\", marginRight: \"auto\", display: \"block\"}}\n                                className=\"btn btn-primary\" onClick={orchestrate} title=\"button\">Get new recipe!</button>\n                    </div>\n                </div>\n                <br/>\n\n            </div>\n        </div>\n    );\n}\n\n","/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/InputValidatorUtil.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/helperFunctions/StringUtil.ts",[],"/Users/kevin.krisp/WebstormProjects/React-Learning/src/components/RecipeCard.tsx",["69","70"],"import React, {useEffect, useState} from \"react\";\nimport {ReactComponent as LikedSvg} from \"../resources/favorite-24px.svg\";\nimport {ReactComponent as LikeSvg} from \"../resources/favorite_border-24px.svg\";\nimport {IDish} from \"../IDish\";\n\ninterface PropsInterface{\n    dish: IDish,\n    addToFavorite(dish: IDish): void;\n    removeFromFavorite(dish: IDish): void;\n}\n\nexport default function RecipeCard(props: PropsInterface) {\n\n    const [dishState, setDishState] = useState({... props.dish})\n\n\n    useEffect(() => {\n        setDishState({... props.dish})\n    }, [props])\n\n\n    const saveAsFavorite = () : void => {\n\n        setDishState({\n            ...dishState,\n            liked: !dishState.liked\n        })\n\n        if (!dishState.liked) {\n            props.addToFavorite(dishState);\n        } else {\n            props.removeFromFavorite(dishState);\n        }\n\n    }\n\n    return (\n        <div>\n                <div style={{backgroundColor: \"#FFDC00\", minWidth: \"100rem\"}}\n                     className=\"row align-items-center justify-content-center heights\">\n\n                    <div className=\"col-2 \">\n\n                        <div style={{backgroundColor: \"#FFFFFF\"}} className=\"row \">\n                            <p className=\"textCenter\"><b>{props.dish.name}</b></p>\n                        </div>\n\n                        <div style={{backgroundColor: \"#FFFFFF\"}} className=\"row align-items-center\">\n\n                            <div className=\"col\">\n                                <img alt=\"recipe\" className=\"recipePicture\"\n                                     src={props.dish.imageUrl}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row align-items-center\">\n                            {dishState.liked ? <LikedSvg title=\"remove from favorite\" onClick={() => saveAsFavorite()}/> :\n                                <LikeSvg title=\"mark as favorite\" onClick={() => saveAsFavorite()}/>}\n                        </div>\n                    </div>\n\n                    <div style={{\n                        minHeight: \"21.35rem\",\n                        maxHeight: \"21.35rem\",\n                        maxWidth: \"50rem\",\n                        minWidth: \"50rem\",\n                        backgroundColor: \"#3D9970\"\n                    }}\n                         className=\"col-4 scrollable\">\n                        <div className=\"row \">\n                            <div className=\"col\">\n                                <p className=\"textCenter\"><b>Recipe</b></p>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <ul>\n                                    {props.dish.recipe.map(recipe => {\n                                        return <li>{recipe}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    );\n\n}",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":25,"column":62,"nodeType":"82","messageId":"83","endLine":25,"endColumn":64},{"ruleId":"84","severity":1,"message":"85","line":41,"column":25,"nodeType":"86","endLine":41,"endColumn":90},{"ruleId":"87","severity":1,"message":"88","line":36,"column":8,"nodeType":"89","endLine":36,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":14,"column":52,"nodeType":"93","messageId":"94","endLine":14,"endColumn":53,"fix":"95"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":26,"nodeType":"93","messageId":"94","endLine":18,"endColumn":27,"fix":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NotFound' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orchestrate'. Either include it or remove the dependency array.","ArrayExpression",["99"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"100","text":"101"},{"range":"102","text":"101"},"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},[478,479],"",[541,542],"Update the dependencies array to be: [orchestrate]",{"range":"105","text":"106"},[1055,1057],"[orchestrate]"]